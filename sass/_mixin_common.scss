@charset "UTF-8";
@import "compass";

/* ***************************************
# Mixins 汎用mixin
*************************************** */

/* ******************************
# テキスト非表示
****************************** */
.text_indent_none{
	text-indent: 100%;
	white-space: nowrap;
	display: block;
	overflow: hidden;
}

@mixin text_indent_none{
	text-indent: 100%;
	white-space: nowrap;
	display: block;
	overflow: hidden;
}

/* *******************************
# sprite用
******************************* */
// $sprites-sizeはretina用の設定
// 画像の半分のサイズを設定する。
// ※スプライトする画像は全て偶数サイズで書き出すこと。

$path-pj : "..";
$path-img: "#{$path-pj}/images";
$path-sprite: "#{$path-img}/sprite.png";
$sprites: sprite-map("icons/*.png");
$sprites-img:sprite-url($sprites);
$sprites-size: 300;

// ratina用css sprite
// 最終行のbackground-sizeにsprite用イメージの半分のwidthを指定する。必ず偶数であること

@mixin sprite_background_retina($name) {
	background-image: $sprites-img;
	background-repeat: no-repeat;
	display: block;
	height: image-height(sprite-file($sprites, $name)) / 2;
	width: image-width(sprite-file($sprites, $name)) / 2;
	$ypos: round(nth(sprite-position($sprites, $name), 2) / 2);
	background-position: 0 $ypos;
	@include background-size($sprites-size*1px auto);
}

// ノーマルcss sprite
@mixin sprite_background_wh($name) {
	background-image: $sprites-img;
	background-repeat: no-repeat;
	display: block;
	height: image-height(sprite-file($sprites, $name));
	width: image-width(sprite-file($sprites, $name));
	background-position: sprite-position($sprites, $name);
}

// ノーマルcss sprite width&heightに!important付
@mixin sprite_background_wh_important($name) {
	background-image: $sprites-img!important;
	background-repeat: no-repeat!important;
	display: block!important;
	height: image-height(sprite-file($sprites, $name))!important;
	width: image-width(sprite-file($sprites, $name))!important;
	background-position: sprite-position($sprites, $name)!important;
}

// リピートcss sprite
$sprites_r: sprite-map("icons_r/*.png", $layout: diagonal);
$sprites_r-img:sprite-url($sprites_r);

@mixin sprite_background_r($name) {
	background-image: $sprites_r-img;
	background-repeat: repeat;
	background-position: sprite-position($sprites_r, $name);
}

/* ===============================================
for bem
=============================================== */
//Element
@mixin e($name) {
  @at-root #{&}__#{$name} {
	@content;
  }
}

//Modifier
@mixin m($name) {
  @at-root #{&}--#{$name} {
	@content;
  }
}
/* ===============================================
common parts
=============================================== */
//タグ
@mixin tag($border,$color,$fontsize) {
	display: inline-block;
	padding: 6px 15px;
	line-height: 1;
	border:1px solid #{$border};
	color: $color;
	font-size: #{$fontsize}px;
}
//ボタン
//a>spanでマークアップ
@mixin btn($bd-color:#fff,$bg-color:#000,$text-color:#fff,$font-size:14px,$padding:"18px 78px",$img:null) {
	padding: #{$padding};
	line-height: 1;
	border:1px solid #{$bd-color};
	background-color: #{$bg-color};
	color: #{$text-color};
	font-size: #{$font-size}px;
	@if $img {
		span {
			line-height: 1;
			@include text_indent_none;
			@include sprite_background_wh(#{$img});
		}
	}
	display: inline-block;
	&:hover {
		opacity: 0.8;
		filter: alpha(opacity=0.8);
	}
}
//font-sizeとline-heightから比率を出力
//数値はpxで「px」抜きで指定
// adobeのWEBアプリでline-heightがpx指定で出力されるため
@mixin fs_lh($font-size,$line-height) {
	font-size: #{$font-size}px;
	line-height: $line-height / $font-size;
}
//画像をマウスオーバーで拡大 imgに対して適用
@mixin scale_img($ratio:1.04,$speed:0.3) {
	-moz-transition: -moz-transform #{$speed}s linear;
	-webkit-transition: -webkit-transform #{$speed}s linear;
	-o-transition: -o-transform #{$speed}s linear;
	-ms-transition: -ms-transform #{$speed}s linear;
	transition: transform #{$speed}s linear;
	&:hover {
		-webkit-transform: scale($ratio);
		-moz-transform: scale($ratio);
		-o-transform: scale($ratio);
		-ms-transform: scale($ratio);
		transform: scale($ratio);
	}
}

//画像をマウスオーバーで拡大 hover使用なし
@mixin scale_img_hasnt_hover($ratio:1.04,$speed:0.3) {
	-moz-transition: -moz-transform #{$speed}s linear;
	-webkit-transition: -webkit-transform #{$speed}s linear;
	-o-transition: -o-transform #{$speed}s linear;
	-ms-transition: -ms-transform #{$speed}s linear;
	transition: transform #{$speed}s linear;
}

@mixin opacity($opacity:0.8) {
	opacity: $opacity;
	-moz-opacity: $opacity; // Mozzila
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(opacity=#{$opacity * 100})";// ie 8
	filter:  progid:DXImageTransform.Microsoft.Alpha(opacity=#{$opacity * 100});// ie lt 8
	zoom:1; // for ie filter
}
